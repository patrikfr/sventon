<?xml version="1.0"?>

<project name="sventon" basedir="." default="usage">
  <property file="dev-build.properties"/>
  <property file="default-dev-build.properties"/>

  <property name="dist.dir" value="../dist"/>
  <property name="src.dir" value="../java/src"/>
  <property name="web.dir" value="../java/web"/>
  <property name="toolslib.dir" value="../java/toolslib"/>
  <property name="testsrc.dir" value="../java/testsrc"/>
  <property name="build.dir" value="${web.dir}/WEB-INF/classes"/>
  <property name="name" value="svn"/>

  <property name="cobertura.dir" value="../java/toolslib"/>
  <property name="instrumented.dir" value="../java/instrumented"/>
  <property name="reports.xml.dir" value="../java/reports/xml"/>
  <property name="reports.html.dir" value="../java/reports/html"/>
  <property name="coverage.dir" value="../java/coverage"/>

  <path id="master-classpath">
    <fileset dir="${web.dir}/WEB-INF/lib">
      <include name="*.jar"/>
    </fileset>
    <fileset dir="${toolslib.dir}">
      <include name="*.jar"/>
    </fileset>
    <!-- We need the servlet API classes:        -->
    <!--   for Tomcat 5.0 use servlet-api.jar    -->
    <!--   for Other app server - check the docs -->
    <fileset dir="${tomcat.home}/common/lib">
      <include name="servlet*.jar"/>
    </fileset>
    <pathelement path="${build.dir}"/>
  </path>

	<path id="cobertura_classpath">
		<fileset dir="${cobertura.dir}">
			<include name="cobertura.jar" />
		</fileset>
	</path>

	<taskdef classpathref="cobertura_classpath" resource="tasks.properties"/>

  <target name="usage">
    <echo message=""/>
    <echo message="${name} build file"/>
    <echo message="-----------------------------------"/>
    <echo message=""/>
    <echo message="Available targets are:"/>
    <echo message=""/>
    <echo message="build               --> Build the application"/>
    <echo message="createWar           --> Create distribution WAR file"/>
    <echo message="deploy              --> Deploy application as directory"/>
    <echo message="deployAndRestart    --> Deploy application as directory and restart Tomcat"/>
    <echo message="deployWar           --> Deploy application as a WAR file"/>
    <echo message="deployWarAndRestart --> Deploy application as a WAR file and restart Tomcat"/>
    <echo message="install             --> Install application in Tomcat"/>
    <echo message="list                --> List Tomcat applications"/>
    <echo message="reload              --> Reload application in Tomcat"/>
    <echo message="runtest             --> Run the tests and create coverage report"/>
    <echo message="start               --> Start Tomcat application"/>
    <echo message="stop                --> Stop Tomcat application"/>
    <echo message="undeploy            --> Undeploy application from Tomcat"/>
    <echo message=""/>
  </target>

  <target name="build" description="Compile main source tree java files">
    <mkdir dir="${build.dir}"/>
    <javac destdir="${build.dir}" target="1.5" debug="true" deprecation="false" optimize="false" failonerror="true">
      <src path="${src.dir}"/>
      <src path="${testsrc.dir}"/>
      <classpath refid="master-classpath"/>
    </javac>
  </target>

  <target name="deploy" depends="build" description="Deploy application">
    <copy todir="${deploy.path}/${name}" preservelastmodified="true">
      <fileset dir="${web.dir}">
        <include name="**/*.*"/>
        <exclude name="**/*Test*"/>
        <exclude name="**/*Mock*"/>
        <exclude name="**/*Stub*"/>
      </fileset>
    </copy>
  </target>

  <target name="createWar" depends="build" description="Create distribution WAR file">
    <war destfile="${dist.dir}/${name}.war" webxml="${web.dir}/WEB-INF/web.xml">
      <fileset dir="${web.dir}">
        <include name="**/*.*"/>
        <exclude name="**/*Test*"/>
        <exclude name="**/*Mock*"/>
        <exclude name="**/*Stub*"/>
      </fileset>
    </war>
  </target>

  <target name="deployWar" depends="build" description="Create and deploy application as a WAR file">
    <war destfile="${dist.dir}/${name}.war" webxml="${web.dir}/WEB-INF/web.xml">
      <fileset dir="${web.dir}">
        <include name="**/*.*"/>
        <exclude name="**/*Test*"/>
        <exclude name="**/*Mock*"/>
        <exclude name="**/*Stub*"/>
      </fileset>
    </war>
    <copy todir="${deploy.path}" preservelastmodified="true">
      <fileset dir=".">
        <include name="*.war"/>
      </fileset>
    </copy>
  </target>

  <target name="clean" description="Clean output directories">
    <delete>
      <fileset dir="${build.dir}">
        <include name="**/*.class"/>
      </fileset>
    </delete>
		<delete dir="${instrumented.dir}" />
		<delete dir="${reports.xml.dir}" />
    <delete dir="${reports.html.dir}" />
    <delete dir="${coverage.dir}" />
		<delete file="cobertura.log" />
		<delete file="cobertura.ser" />
  </target>

  <target name="undeploy" description="Un-Deploy application">
    <delete>
      <fileset dir="${deploy.path}/${name}">
        <include name="**/*.*"/>
      </fileset>
    </delete>
  </target>

  <target name="deployAndRestart" description="Deploy and restart (stop/start) Tomcat" depends="deploy, stop, start">
    <echo level="info">Re-deploy done.</echo>
  </target>

  <target name="deployWarAndRestart" description="Deploy WAR and restart (stop/start) Tomcat" depends="deployWar, stop, start">
    <echo level="info">Re-deploy done.</echo>
  </target>

  <target name="init">
    <mkdir dir="${instrumented.dir}"/>
    <mkdir dir="${reports.xml.dir}"/>
    <mkdir dir="${reports.html.dir}"/>
    <mkdir dir="${coverage.dir}"/>
  </target>

  <target name="runtest" depends="clean, init, build">
    <cobertura-instrument todir="${instrumented.dir}" datafile="${basedir}/cobertura.ser">
      <fileset dir="${build.dir}">
        <include name="**/*.class"/>
        <exclude name="**/*Test*"/>
        <exclude name="**/*Mock*"/>
        <exclude name="**/*Stub*"/>
      </fileset>
    </cobertura-instrument>

    <junit fork="yes">
      <sysproperty key="net.sourceforge.cobertura.datafile" file="${basedir}/cobertura.ser"/>
      <classpath>
        <pathelement location="${instrumented.dir}"/>
        <pathelement location="${build.dir}"/>
        <path refid="master-classpath"/>
        <path refid="cobertura_classpath"/>
      </classpath>

      <formatter type="xml"/>
      <batchtest todir="${reports.xml.dir}">
        <fileset dir="${testsrc.dir}">
          <include name="**/*Test.java"/>
        </fileset>
      </batchtest>
    </junit>

    <cobertura-report destdir="${coverage.dir}"
                      datafile="${basedir}/cobertura.ser">
      <fileset dir="${src.dir}">
        <include name="**/*.java"/>
        <exclude name="**/*Mock*"/>
        <exclude name="**/*Stub*"/>
      </fileset>
    </cobertura-report>

    <junitreport todir="${reports.xml.dir}">
      <fileset dir="${reports.xml.dir}">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${reports.html.dir}"/>
    </junitreport>

  </target>


  <!-- ============================================================== -->
  <!-- Tomcat tasks - remove these if you don't have Tomcat installed -->
  <!-- ============================================================== -->

  <taskdef name="install" classname="org.apache.catalina.ant.InstallTask">
    <classpath>
      <path location="${tomcat.home}/server/lib/catalina-ant.jar"/>
    </classpath>
  </taskdef>
  <taskdef name="reload" classname="org.apache.catalina.ant.ReloadTask">
    <classpath>
      <path location="${tomcat.home}/server/lib/catalina-ant.jar"/>
    </classpath>
  </taskdef>
  <taskdef name="list" classname="org.apache.catalina.ant.ListTask">
    <classpath>
      <path location="${tomcat.home}/server/lib/catalina-ant.jar"/>
    </classpath>
  </taskdef>
  <taskdef name="start" classname="org.apache.catalina.ant.StartTask">
    <classpath>
      <path location="${tomcat.home}/server/lib/catalina-ant.jar"/>
    </classpath>
  </taskdef>
  <taskdef name="stop" classname="org.apache.catalina.ant.StopTask">
    <classpath>
      <path location="${tomcat.home}/server/lib/catalina-ant.jar"/>
    </classpath>
  </taskdef>

  <target name="install" description="Install application in Tomcat">
    <install url="${tomcat.manager.url}" username="${tomcat.manager.username}" password="${tomcat.manager.password}" path="/${name}" war="${name}"/>
  </target>

  <target name="reload" description="Reload application in Tomcat">
    <reload url="${tomcat.manager.url}" username="${tomcat.manager.username}" password="${tomcat.manager.password}" path="/${name}"/>
  </target>

  <target name="start" description="Start Tomcat application">
    <start url="${tomcat.manager.url}" username="${tomcat.manager.username}" password="${tomcat.manager.password}" path="/${name}"/>
  </target>

  <target name="stop" description="Stop Tomcat application">
    <stop url="${tomcat.manager.url}" username="${tomcat.manager.username}" password="${tomcat.manager.password}" path="/${name}"/>
  </target>

  <target name="list" description="List Tomcat applications">
    <list url="${tomcat.manager.url}" username="${tomcat.manager.username}" password="${tomcat.manager.password}"/>
  </target>

  <!-- End Tomcat tasks -->

</project>
