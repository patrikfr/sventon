<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<!--
  - Application context definition for Sventon DispatcherServlet.
-->

<beans default-lazy-init="false">

  <!-- property placeholder post-processor -->
  <bean id="placeholderConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="ignoreResourceNotFound" value="true"/>
    <!-- set default values to empty to trigger the installation mode -->
    <property name="properties">
      <props>
        <prop key="svn.root"></prop>
        <prop key="svn.configpath"></prop>
        <prop key="svn.uid"></prop>
        <prop key="svn.pwd"></prop>
      </props>
    </property>
    <property name="locations">
      <list>
        <value>classpath:sventon.properties</value>
      </list>
    </property>
  </bean>

  <bean id="svnBaseCommandValidator" class="de.berlios.sventon.command.SVNBaseCommandValidator"/>

  <bean id="configCommandValidator" class="de.berlios.sventon.command.ConfigCommandValidator"/>

  <bean id="abstractController" abstract="true">
    <property name="repositoryConfiguration">
      <ref local="repositoryConfig"/>
    </property>
    <property name="revisionIndexer">
      <ref local="revisionIndexer"/>
    </property>
  </bean>

  <bean id="repoBrowserController" class="de.berlios.sventon.ctrl.RepoBrowserController" parent="abstractController">
    <property name="validator">
      <ref local="svnBaseCommandValidator"/>
    </property>
  </bean>

  <bean id="showLockController" class="de.berlios.sventon.ctrl.ShowLockController" parent="abstractController">
    <property name="validator">
      <ref local="svnBaseCommandValidator"/>
    </property>
  </bean>

  <bean id="rssController" class="de.berlios.sventon.ctrl.xml.RSSController">
    <property name="repositoryConfiguration">
      <ref local="repositoryConfig"/>
    </property>
    <property name="feedType">
      <value>rss_2.0</value>
    </property>
    <property name="feedMimeType">
      <value>application/xml; charset=UTF-8</value>
    </property>
    <property name="feedItemCount">
      <value>20</value>
    </property>
  </bean>

  <bean id="latestInfoController" class="de.berlios.sventon.ctrl.xml.ShowLatestCommitInfoController">
    <property name="repositoryConfiguration">
      <ref local="repositoryConfig"/>
    </property>
    <property name="encoding">
      <value>ISO-8859-1</value>
    </property>
  </bean>

  <bean id="revInfoController" class="de.berlios.sventon.ctrl.ShowRevisionInfoController" parent="abstractController">
    <property name="validator">
      <ref local="svnBaseCommandValidator"/>
    </property>
  </bean>

  <bean id="goToController" class="de.berlios.sventon.ctrl.GoToController" parent="abstractController">
    <property name="validator">
      <ref local="svnBaseCommandValidator"/>
    </property>
  </bean>

  <bean id="showLogsController" class="de.berlios.sventon.ctrl.ShowLogController" parent="abstractController">
    <property name="validator">
      <ref local="svnBaseCommandValidator"/>
    </property>
    <!-- Number of log entries / page in logs view -->
    <property name="pageSize">
      <value>10</value>
    </property>
  </bean>

  <bean id="completionController" class="de.berlios.sventon.ctrl.xml.CompletionController" parent="abstractController">
    <property name="validator">
      <ref local="svnBaseCommandValidator"/>
    </property>
    <property name="encoding">
      <value>ISO-8859-1</value>
    </property>
  </bean>

  <bean id="searchController" class="de.berlios.sventon.ctrl.SearchController" parent="abstractController">
    <property name="validator">
      <ref local="svnBaseCommandValidator"/>
    </property>
  </bean>

  <bean id="flattenController" class="de.berlios.sventon.ctrl.FlattenController" parent="abstractController">
    <property name="validator">
      <ref local="svnBaseCommandValidator"/>
    </property>
  </bean>

  <bean id="showFileController" class="de.berlios.sventon.ctrl.ShowFileController" parent="abstractController">
    <property name="archiveFileExtensionPattern">
      <value>(jar|zip|war|ear)</value>
    </property>
    <property name="colorer">
      <ref local="colorer"/>
    </property>
    <property name="validator">
      <ref local="svnBaseCommandValidator"/>
    </property>
    <property name="imageUtil">
      <ref local="imageUtil"/>
    </property>
  </bean>

  <bean id="showThumbnailController" class="de.berlios.sventon.ctrl.ShowThumbnailController" parent="abstractController">
    <property name="validator">
      <ref local="svnBaseCommandValidator"/>
    </property>
    <property name="imageUtil">
      <ref local="imageUtil"/>
    </property>
  </bean>

  <bean id="diffController" class="de.berlios.sventon.ctrl.DiffController" parent="abstractController">
    <property name="validator">
      <ref local="svnBaseCommandValidator"/>
    </property>
  </bean>

  <bean id="diffPreviousController" class="de.berlios.sventon.ctrl.DiffPreviousController" parent="abstractController">
    <property name="validator">
      <ref local="svnBaseCommandValidator"/>
    </property>
  </bean>

  <bean id="getController" class="de.berlios.sventon.ctrl.GetController" parent="abstractController">
    <property name="validator">
      <ref local="svnBaseCommandValidator"/>
    </property>
    <property name="imageUtil">
      <ref local="imageUtil"/>
    </property>
    <property name="cache">
      <ref local="cache"/>
    </property>
  </bean>

  <bean id="blameController" class="de.berlios.sventon.ctrl.BlameController" parent="abstractController">
    <property name="colorer">
      <ref local="colorer"/>
    </property>
    <property name="validator">
      <ref local="svnBaseCommandValidator"/>
    </property>
  </bean>

  <bean id="configurationController" class="de.berlios.sventon.ctrl.ConfigurationController">
    <property name="repositoryConfiguration">
      <ref local="repositoryConfig"/>
    </property>
    <property name="validator">
      <ref local="configCommandValidator"/>
    </property>
    <property name="scheduler">
      <ref local="scheduler"/>
    </property>
  </bean>

  <bean id="clearSessionController" class="de.berlios.sventon.ctrl.ClearSessionController"/>

  <bean id="urlMapping" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
    <property name="mappings">
      <props>
        <!-- url mappings -->
        <prop key="/repobrowser.svn">repoBrowserController</prop>
        <prop key="/showlog.svn">showLogsController</prop>
        <prop key="/showfile.svn">showFileController</prop>
        <prop key="/clearsession.svn">clearSessionController</prop>
        <prop key="/search.svn">searchController</prop>
        <prop key="/blame.svn">blameController</prop>
        <prop key="/flatten.svn">flattenController</prop>
        <prop key="/get.svn">getController</prop>
        <prop key="/config.svn">configurationController</prop>
        <prop key="/showthumbs.svn">showThumbnailController</prop>
        <prop key="/diff.svn">diffController</prop>
        <prop key="/diffprev.svn">diffPreviousController</prop>
        <prop key="/goto.svn">goToController</prop>
        <prop key="/revinfo.svn">revInfoController</prop>
        <prop key="/showlock.svn">showLockController</prop>
        <!-- url mappings for xml producers -->
        <prop key="/rss.xml">rssController</prop>
        <prop key="/compl.xml">completionController</prop>
        <prop key="/latest.xml">latestInfoController</prop>
      </props>
    </property>
  </bean>

  <bean id="imageUtil" class="de.berlios.sventon.util.ImageUtil">
    <property name="maxThumbnailSize">
      <value>200</value>
    </property>
    <property name="mimeMappings">
      <props>
        <prop key="gif">image/gif</prop>
        <prop key="png">image/png</prop>
        <prop key="jpg">image/jpg</prop>
        <prop key="jpe">image/jpg</prop>
        <prop key="jpeg">image/jpg</prop>
      </props>
    </property>
  </bean>

  <bean id="cache" class="de.berlios.sventon.cache.SventonCacheImpl" />

  <bean id="repositoryConfig" class="de.berlios.sventon.repository.RepositoryConfiguration" >
    <property name="repositoryRoot">
      <value>${svn.root}</value>
    </property>
    <property name="SVNConfigurationPath">
      <value>${svn.configpath}</value>
    </property>
    <property name="configuredUID">
      <value>${svn.uid}</value>
    </property>
    <property name="configuredPWD">
      <value>${svn.pwd}</value>
    </property>
  </bean>

  <!-- temporarily use the reloadable version (makes developing easier) -->
  <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
    <property name="basename" value="/WEB-INF/classes/messages" />
    <property name="useCodeAsDefaultMessage"><value>true</value></property>
    <property name="cacheSeconds" value="0" />
  </bean>

  <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <property name="viewClass">
      <value>org.springframework.web.servlet.view.JstlView</value>
    </property>
    <property name="prefix">
      <value>/WEB-INF/jsp/</value>
    </property>
    <property name="suffix">
      <value>.jsp</value>
    </property>
  </bean>

  <bean id="revisionIndexer" class="de.berlios.sventon.index.RevisionIndexer" destroy-method="destroy">
    <constructor-arg>
      <ref bean="repositoryConfig"/>
    </constructor-arg>
  </bean>

  <bean id="colorer" class="de.berlios.sventon.colorer.JHighlightColorer" >
    <property name="encoding">
      <value>ISO-8859-1</value>
    </property>
    <property name="rendererMappings">
      <map>
        <entry key="java" value-ref="javaXhtmlRenderer"/>
        <entry key="beanshell" value-ref="javaXhtmlRenderer"/>
        <entry key="bsh" value-ref="javaXhtmlRenderer"/>
        <entry key="html" value-ref="xmlXhtmlRenderer"/>
        <entry key="htm" value-ref="xmlXhtmlRenderer"/>
        <entry key="xml" value-ref="xmlXhtmlRenderer"/>
        <entry key="xhtml" value-ref="xmlXhtmlRenderer"/>
        <entry key="lzx" value-ref="xmlXhtmlRenderer"/>
        <entry key="cpp" value-ref="cppXhtmlRenderer"/>
        <entry key="cxx" value-ref="cppXhtmlRenderer"/>
        <entry key="c++" value-ref="cppXhtmlRenderer"/>
        <entry key="c" value-ref="cppXhtmlRenderer"/>
        <entry key="groovy" value-ref="groovyXhtmlRenderer"/>
      </map>
    </property>
  </bean>

  <bean id="javaXhtmlRenderer" class="com.uwyn.jhighlight.renderer.JavaXhtmlRenderer" />
  <bean id="xmlXhtmlRenderer" class="com.uwyn.jhighlight.renderer.XmlXhtmlRenderer" />
  <bean id="cppXhtmlRenderer" class="com.uwyn.jhighlight.renderer.CppXhtmlRenderer" />
  <bean id="groovyXhtmlRenderer" class="com.uwyn.jhighlight.renderer.GroovyXhtmlRenderer" />

  <!-- Quartz Scheduler, with pre-registered triggers -->
  <!-- Will automatically start scheduling on context startup -->
  <bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
    <property name="waitForJobsToCompleteOnShutdown" value="true"/>
    <property name="triggers">
      <list>
        <ref local="indexUpdateTrigger"/>
      </list>
    </property>
  </bean>

  <!-- Registered by the 'scheduler' bean -->
  <bean id="indexUpdateTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
    <property name="jobDetail">
      <ref local="indexUpdateJobDetail"/>
    </property>
    <property name="startDelay" value="0"/>
    <property name="repeatInterval" value="600000"/>
  </bean>

  <!-- Convenient way of invoking existing business logic instead of writing a job -->
  <bean id="indexUpdateJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
    <property name="targetObject" ref="revisionIndexer"/>
    <property name="targetMethod" value="update"/>
  </bean>

</beans>
